extends ../_layout.jade

block append head-styles
  link(rel='stylesheet', href='/map/css/map.css?#{meta.version}')
  link(rel='icon', href='/css/images/favicon.png')
  style
    :stylus
      @require 'css/_base'
      @require 'css/_critical'

block append head-meta
  meta(name='title', content='Map â€” Global Forest Watch Fires')
  meta(name='description', content='Browse current active fires and sign up for alerts, or layer data to create custom maps showing forest use, conservation, land cover, air quality, and satellite imagery.')
  meta(name='keywords', content='Active Fires, air quality, alerts, ASEAN, burn scars, commodities, concessions, conservation, deforestation, deforesting, fire, fire response, fires, forest analysis, forest clearing, forest fires, forest loss, forest monitoring, forest news, forest use, forest watch, GFW, GIS, greenhouse gases, haze, illegal fires, imagery, DigitalGlobe, Landsat, Indonesia, land cover, land fires, map, mapping, maps, monitoring, NASA, NOAA, oil palm, peat, peat soils, peatland, pollution, real-time, respiratory, satellite, slash-and-burn, smoke, Southeast Asia, tree cover loss, trees, visualize, wind direction, wood pulp')



block append head-scripts
  script(src='../vendors/kalendae/build/kalendae.standalone.js', async)
  script.
    var base = location.pathname.replace(/\/[^/]+$/, '/map/');
    window.version = '#{meta.version}';
    var dojoConfig = {
      has: {
        "esri-featurelayer-webgl": 1
      },
      parseOnLoad: false,
      async: true,
      cacheBust: 'v=#{meta.version}',
      packages: [
        { name: 'js', location: base + 'js' },
        { name: 'utils', location: base + 'js/utils' },
        { name: 'stores', location: base + 'js/stores' },
        { name: 'helpers', location: base + 'js/helpers' },
        { name: 'actions', location: base + 'js/actions' },
        { name: 'components', location: base + 'js/components' },
        { name: 'vendors', location: base + '../vendors' }
      ],
      aliases: [
        ['alt', 'vendors/alt/dist/alt.min'],
        ['react', 'vendors/react/react.production.min'],
        ['react-dom', 'vendors/react/react-dom.production.min'],
        ['react-motion', 'vendors/react-motion/build/react-motion'],
        ['lodash', 'vendors/lodash/lodash.min'],
        ['jquery', 'https://cdn.jsdelivr.net/jquery/2.1.4/jquery.min.js'],
        ['babel-polyfill', 'vendors/babel-polyfill/browser-polyfill'],
        ['formsy-react', 'vendors/formsy-react/release/formsy-react'],
        ['intlTelInput', 'vendors/intl-tel-input/build/js/intlTelInput'],
        ['chosen', 'vendors/chosen/chosen.jquery'],
        ['react-select', 'vendors/react-select/dist/react-select.min'],
        ['react-input-autosize', 'vendors/react-input-autosize/dist/react-input-autosize.min'],
        ['prop-types', 'vendors/prop-types/prop-types.min'],
        ['classnames', 'vendors/classnames/index'],
      ],
      deps: ['dojo/domReady!'],
      callback: function () {
        // Set up globals
        window.app = {
          version: '#{meta.version}',
          debugEnabled: false,
          mobile: function () {return (window.matchMedia === undefined ? false : window.matchMedia('only screen and (max-width: 850px)').matches)},
          debug: function (message) {
            if (this.debugEnabled) {
              var print = typeof message === 'string' ? console.log : console.dir;
              print.apply(console, [message]);
            }
          }
        };
        require(['js/main']);
      }
    };
  script.
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    ga('create', 'UA-35900039-4', 'auto', {'name':"A"});
    ga('A.send', 'pageview');
    ga('create', 'UA-1981181-14', 'auto', {'name':"B"});
    ga('B.send', 'pageview');
    ga('create', 'UA-48182293-1', 'auto', {'name':"C",'cookieDomain':"'fires.globalforestwatch.org']"});
    ga('C.send', 'pageview');
    if (window.top !== window.self) {
      var payload = {
        'hitType': 'event',
        'eventCategory': 'Event',
        'eventAction': 'embed',
        'eventLabel': 'iFrame Embed',
        'eventValue': 'This application was viewed inside an embedded iFrame.'
      };
      ga('A.send', payload);
      ga('B.send', payload);
      ga('C.send', payload);
    }
  // Hotjar Tracking Code for https://fires.globalforestwatch.org/
  script.
    (function(h,o,t,j,a,r) {
      h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};
      h._hjSettings={hjid:1494735,hjsv:6};
      a=o.getElementsByTagName('head')[0];
      r=o.createElement('script');r.async=1;
      r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;
      a.appendChild(r);
      })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');

block content
  //- style(type='text/css', media='print').
  //-   @page { size: landscape; }
  include html/_svgAssets.jade
  div#transifexContainer
    div#customTransifex
  div#root.layout-content
  div#layer-modal.modal.hidden
  div#canopy-modal.modal.hidden
  div#confirmation-modal.modal.hidden
  div#search-modal.modal.hidden
  div#basemap-modal.modal.hidden
  div#calendar-modal.modal.hidden
  div#subscription-modal.modal.hidden
  div#share-modal.modal.hidden
  div#fires-modal.modal.hidden
  div#master-modal.modal.hidden
  script(src='https://js.arcgis.com/3.30/init.js', async)
  script(src='https://platform.twitter.com/widgets.js', async)
